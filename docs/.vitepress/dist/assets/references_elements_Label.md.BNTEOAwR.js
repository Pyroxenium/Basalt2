import{_ as t,a,b as r,ag as l}from"./chunks/framework.BcrMLAmg.js";const c=JSON.parse('{"title":"Label","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/Label.md","filePath":"references/elements/Label.md","lastUpdated":1757844696000}'),d={name:"references/elements/Label.md"};function o(n,e,s,i,h,p){return r(),a("div",null,e[0]||(e[0]=[l('<h1 id="label" tabindex="-1">Label <a class="header-anchor" href="#label" aria-label="Permalink to &quot;Label&quot;">​</a></h1><p><em>This is the label class. It provides a simple text display element that automatically</em><em>resizes its width based on the text content.</em></p><p>Extends: <code>VisualElement</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>text</td><td>string</td><td>Label</td><td>The text content to display. Can be a string or a function that returns a string</td></tr><tr><td>autoSize</td><td>boolean</td><td>true</td><td>Whether the label should automatically resize its width based on the text content</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Returns</th><th>Description</th></tr></thead><tbody><tr><td><a href="#label-getwrappedtext">Label:getWrappedText</a></td><td>table</td><td>Gets the wrapped lines of the Label</td></tr></tbody></table><h2 id="label-getwrappedtext" tabindex="-1">Label:getWrappedText() <a class="header-anchor" href="#label-getwrappedtext" aria-label="Permalink to &quot;Label:getWrappedText()&quot;">​</a></h2><p>Gets the wrapped lines of the Label</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>table</code> <code>wrappedText</code> The wrapped lines of the Label</li></ul>',11)]))}const u=t(d,[["render",o]]);export{c as __pageData,u as default};
