import{_ as e,a,b as r,ag as o}from"./chunks/framework.BcrMLAmg.js";const u=JSON.parse('{"title":"TabControl","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/TabControl.md","filePath":"references/elements/TabControl.md","lastUpdated":1757844696000}'),d={name:"references/elements/TabControl.md"};function n(l,t,i,b,s,c){return r(),a("div",null,t[0]||(t[0]=[o('<h1 id="tabcontrol" tabindex="-1">TabControl <a class="header-anchor" href="#tabcontrol" aria-label="Permalink to &quot;TabControl&quot;">​</a></h1><p><em>The TabControl is a container that provides tabbed interface functionality</em></p><p>Extends: <code>Container</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>activeTab</td><td>number</td><td>The</td><td>currently active tab ID</td></tr><tr><td>tabHeight</td><td>number</td><td>Height</td><td>of the tab header area</td></tr><tr><td>tabs</td><td>table</td><td>List</td><td>of tab definitions</td></tr><tr><td>headerBackground</td><td>color</td><td>Background</td><td>color for the tab header area</td></tr><tr><td>activeTabBackground</td><td>color</td><td>Background</td><td>color for the active tab</td></tr><tr><td>activeTabTextColor</td><td>color</td><td>Foreground</td><td>color for the active tab text</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Returns</th><th>Description</th></tr></thead><tbody><tr><td><a href="#tabcontrol-newtab-title">TabControl:newTab</a></td><td>table</td><td>Creates a new tab handler proxy</td></tr><tr><td><a href="#tabcontrol-settab-element-tabid">TabControl:setTab</a></td><td>TabControl</td><td>Sets an element to belong to a specific tab</td></tr><tr><td><a href="#tabcontrol-addelement-elementtype-tabid">TabControl:addElement</a></td><td>table</td><td>Adds an element to the TabControl and assigns it to the active tab</td></tr><tr><td><a href="#tabcontrol-setactivetab-tabid">TabControl:setActiveTab</a></td><td>-</td><td>Sets the active tab</td></tr><tr><td><a href="#tabcontrol-setcursor">TabControl:setCursor</a></td><td>-</td><td>Sets the cursor position; accounts for tab header offset when delegating to parent</td></tr></tbody></table><h2 id="tabcontrol-newtab-title" tabindex="-1">TabControl:newTab(title) <a class="header-anchor" href="#tabcontrol-newtab-title" aria-label="Permalink to &quot;TabControl:newTab(title)&quot;">​</a></h2><p>returns a proxy for adding elements to the tab</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>title</code> <code>string</code> The title of the tab</li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>table</code> <code>tabHandler</code> The tab handler proxy for adding elements to the new tab</li></ul><h2 id="tabcontrol-settab-element-tabid" tabindex="-1">TabControl:setTab(element, tabId) <a class="header-anchor" href="#tabcontrol-settab-element-tabid" aria-label="Permalink to &quot;TabControl:setTab(element, tabId)&quot;">​</a></h2><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>element</code> <code>table</code> The element to assign to a tab</li><li><code>tabId</code> <code>number</code> The ID of the tab to assign the element to</li></ul><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>TabControl</code> <code>self</code> For method chaining</li></ul><h2 id="tabcontrol-addelement-elementtype-tabid" tabindex="-1">TabControl:addElement(elementType, tabId) <a class="header-anchor" href="#tabcontrol-addelement-elementtype-tabid" aria-label="Permalink to &quot;TabControl:addElement(elementType, tabId)&quot;">​</a></h2><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>elementType</code> <code>string</code> The type of element to add</li><li><code>tabId</code> <code>number</code> Optional tab ID, defaults to active tab</li></ul><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>table</code> <code>element</code> The created element</li></ul><h2 id="tabcontrol-setactivetab-tabid" tabindex="-1">TabControl:setActiveTab(tabId) <a class="header-anchor" href="#tabcontrol-setactivetab-tabid" aria-label="Permalink to &quot;TabControl:setActiveTab(tabId)&quot;">​</a></h2><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>tabId</code> <code>number</code> The ID of the tab to activate</li></ul><h2 id="tabcontrol-setcursor" tabindex="-1">TabControl:setCursor() <a class="header-anchor" href="#tabcontrol-setcursor" aria-label="Permalink to &quot;TabControl:setCursor()&quot;">​</a></h2>',27)]))}const m=e(d,[["render",n]]);export{u as __pageData,m as default};
