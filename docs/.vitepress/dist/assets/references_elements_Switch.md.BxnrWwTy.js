import{_ as e,a as d,b as a,ag as r}from"./chunks/framework.BcrMLAmg.js";const m=JSON.parse('{"title":"Switch","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/Switch.md","filePath":"references/elements/Switch.md","lastUpdated":1757844696000}'),o={name:"references/elements/Switch.md"};function n(i,t,c,h,s,l){return a(),d("div",null,t[0]||(t[0]=[r('<h1 id="switch" tabindex="-1">Switch <a class="header-anchor" href="#switch" aria-label="Permalink to &quot;Switch&quot;">​</a></h1><p><em>The Switch is a standard Switch element with click handling and state management.</em></p><p>Extends: <code>VisualElement</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>checked</td><td>boolean</td><td>Whether</td><td>switch is checked</td></tr><tr><td>text</td><td>string</td><td>Text</td><td>to display next to switch</td></tr><tr><td>autoSize</td><td>boolean</td><td>Whether</td><td>to automatically size the element to fit switch and text</td></tr><tr><td>onBackground</td><td>number</td><td>Background</td><td>color when ON</td></tr><tr><td>offBackground</td><td>number</td><td>Background</td><td>color when OFF</td></tr></tbody></table>',5)]))}const _=e(o,[["render",n]]);export{m as __pageData,_ as default};
