import{_ as d,a as l,b as o,ag as a,p as t,g as e}from"./chunks/framework.BcrMLAmg.js";const p=JSON.parse('{"title":"ScrollBar","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/ScrollBar.md","filePath":"references/elements/ScrollBar.md","lastUpdated":1757925952000}'),n={name:"references/elements/ScrollBar.md"};function c(s,r,h,i,u,m){return o(),l("div",null,r[0]||(r[0]=[a('<h1 id="scrollbar" tabindex="-1">ScrollBar <a class="header-anchor" href="#scrollbar" aria-label="Permalink to &quot;ScrollBar&quot;">​</a></h1><p><em>A ScrollBar element that can be attached to other elements to control their scroll properties</em></p><p>Extends: <code>VisualElement</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>number</td><td>0</td><td>Current scroll value</td></tr><tr><td>min</td><td>number</td><td>0</td><td>Minimum scroll value</td></tr><tr><td>max</td><td>number</td><td>100</td><td>Maximum scroll value</td></tr><tr><td>step</td><td>number</td><td>1</td><td>Step size for scroll operations</td></tr><tr><td>dragMultiplier</td><td>number</td><td>1</td><td>How fast the ScrollBar moves when dragging</td></tr><tr><td>symbol</td><td>string</td><td>&quot;</td><td>&quot; Symbol used for the ScrollBar handle</td></tr><tr><td>backgroundSymbol</td><td>string</td><td>&quot;\\127&quot;</td><td>Symbol used for the ScrollBar background</td></tr><tr><td>symbolBackgroundColor</td><td>color</td><td>black</td><td>Background color of the ScrollBar handle</td></tr><tr><td>backgroundSymbol</td><td>string</td><td>&quot;\\127&quot;</td><td>Symbol used for the ScrollBar background</td></tr><tr><td>minValue</td><td>number</td><td>function</td><td>0</td></tr><tr><td>maxValue</td><td>number</td><td>function</td><td>100</td></tr><tr><td>orientation</td><td>string</td><td>vertical</td><td>Orientation of the ScrollBar (&quot;vertical&quot; or &quot;horizontal&quot;)</td></tr><tr><td>handleSize</td><td>number</td><td>2</td><td>Size of the ScrollBar handle in characters</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Returns</th><th>Description</th></tr></thead><tbody><tr><td><a href="#scrollbar-attach-element-config">ScrollBar:attach</a></td><td>ScrollBar</td><td>Attaches the ScrollBar to an element&#39;s property</td></tr><tr><td><a href="#scrollbar-updateattachedelement">ScrollBar:updateAttachedElement</a></td><td>ScrollBar</td><td>Updates the attached element&#39;s property based on the ScrollBar value</td></tr></tbody></table><h2 id="scrollbar-attach-element-config" tabindex="-1">ScrollBar:attach(element, config) <a class="header-anchor" href="#scrollbar-attach-element-config" aria-label="Permalink to &quot;ScrollBar:attach(element, config)&quot;">​</a></h2><p>Attaches the ScrollBar to an element&#39;s property</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3>',10),t("ul",null,[t("li",null,[t("code",null,"element"),e(),t("code",null,"BaseElement"),e(" The element to attach to")]),t("li",{property:""},[t("code",null,"config"),e(),t("code",null,"table"),e(" Configuration")])],-1),a('<h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>ScrollBar</code> <code>self</code> The ScrollBar instance</li></ul><h2 id="scrollbar-updateattachedelement" tabindex="-1">ScrollBar:updateAttachedElement() <a class="header-anchor" href="#scrollbar-updateattachedelement" aria-label="Permalink to &quot;ScrollBar:updateAttachedElement()&quot;">​</a></h2><p>Updates the attached element&#39;s property based on the ScrollBar value</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>ScrollBar</code> <code>self</code> The ScrollBar instance</li></ul>',6)]))}const S=d(n,[["render",c]]);export{p as __pageData,S as default};
