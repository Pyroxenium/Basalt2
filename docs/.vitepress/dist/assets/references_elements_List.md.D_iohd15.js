import{_ as e,a as s,b as a,ag as i}from"./chunks/framework.BcrMLAmg.js";const k=JSON.parse('{"title":"List","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/List.md","filePath":"references/elements/List.md","lastUpdated":1757844696000}'),l={name:"references/elements/List.md"};function r(d,t,h,n,o,c){return a(),s("div",null,t[0]||(t[0]=[i(`<h1 id="list" tabindex="-1">List <a class="header-anchor" href="#list" aria-label="Permalink to &quot;List&quot;">​</a></h1><p>_This is the list class. It provides a scrollable list of selectable items with support for _ <em>custom item rendering, separators, and selection handling.</em></p><p>Extends: <code>VisualElement</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>items</td><td>table</td><td>{}</td><td>List of items to display. Items can be tables with properties including selected state</td></tr><tr><td>selectable</td><td>boolean</td><td>true</td><td>Whether items in the list can be selected</td></tr><tr><td>multiSelection</td><td>boolean</td><td>false</td><td>Whether multiple items can be selected at once</td></tr><tr><td>offset</td><td>number</td><td>0</td><td>Current scroll offset for viewing long lists</td></tr><tr><td>selectedBackground</td><td>color</td><td>blue</td><td>Background color for selected items</td></tr><tr><td>selectedForeground</td><td>color</td><td>white</td><td>Text color for selected items</td></tr></tbody></table><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Event</th><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td>onSelect</td><td><code>index number, item table</code></td><td>Fired when an item is selected</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Returns</th><th>Description</th></tr></thead><tbody><tr><td><a href="#list-additem-text">List:addItem</a></td><td>List</td><td>Adds an item to the list</td></tr><tr><td><a href="#list-removeitem-index">List:removeItem</a></td><td>List</td><td>Removes an item from the list</td></tr><tr><td><a href="#list-clear">List:clear</a></td><td>List</td><td>Clears all items from the list</td></tr><tr><td><a href="#list-getselecteditems">List:getSelectedItems</a></td><td>table</td><td>Gets the currently selected items</td></tr><tr><td><a href="#list-getselecteditem">List:getSelectedItem</a></td><td>selected</td><td>Gets first selected item</td></tr><tr><td><a href="#list-onselect-callback">List:onSelect</a></td><td>List</td><td>Registers a callback for the select event</td></tr><tr><td><a href="#list-scrolltobottom">List:scrollToBottom</a></td><td>List</td><td>Scrolls the list to the bottom</td></tr><tr><td><a href="#list-scrolltotop">List:scrollToTop</a></td><td>List</td><td>Scrolls the list to the top</td></tr></tbody></table><h2 id="list-additem-text" tabindex="-1">List:addItem(text) <a class="header-anchor" href="#list-additem-text" aria-label="Permalink to &quot;List:addItem(text)&quot;">​</a></h2><p>Adds an item to the list</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>text</code> <code>string|table</code> The item to add (string or item table)</li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>List</code> <code>self</code> The List instance</li></ul><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;New Item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="list-removeitem-index" tabindex="-1">List:removeItem(index) <a class="header-anchor" href="#list-removeitem-index" aria-label="Permalink to &quot;List:removeItem(index)&quot;">​</a></h2><p>Removes an item from the list</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>index</code> <code>number</code> The index of the item to remove</li></ul><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>List</code> <code>self</code> The List instance</li></ul><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="list-clear" tabindex="-1">List:clear() <a class="header-anchor" href="#list-clear" aria-label="Permalink to &quot;List:clear()&quot;">​</a></h2><p>Clears all items from the list</p><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>List</code> <code>self</code> The List instance</li></ul><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="list-getselecteditems" tabindex="-1">List:getSelectedItems() <a class="header-anchor" href="#list-getselecteditems" aria-label="Permalink to &quot;List:getSelectedItems()&quot;">​</a></h2><p>Gets the currently selected items</p><h3 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>table</code> <code>selected</code> List of selected items</li></ul><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getSelectedItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="list-getselecteditem" tabindex="-1">List:getSelectedItem() <a class="header-anchor" href="#list-getselecteditem" aria-label="Permalink to &quot;List:getSelectedItem()&quot;">​</a></h2><p>Gets first selected item</p><h3 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>selected</code> <code>The</code> first item</li></ul><h2 id="list-onselect-callback" tabindex="-1">List:onSelect(callback) <a class="header-anchor" href="#list-onselect-callback" aria-label="Permalink to &quot;List:onSelect(callback)&quot;">​</a></h2><p>Registers a callback for the select event</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>callback</code> <code>function</code> The callback function to register</li></ul><h3 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>List</code> <code>self</code> The List instance</li></ul><h3 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onSelect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, item) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Selected item:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index, item) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="list-scrolltobottom" tabindex="-1">List:scrollToBottom() <a class="header-anchor" href="#list-scrolltobottom" aria-label="Permalink to &quot;List:scrollToBottom()&quot;">​</a></h2><p>Scrolls the list to the bottom</p><h3 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>List</code> <code>self</code> The List instance</li></ul><h2 id="list-scrolltotop" tabindex="-1">List:scrollToTop() <a class="header-anchor" href="#list-scrolltotop" aria-label="Permalink to &quot;List:scrollToTop()&quot;">​</a></h2><p>Scrolls the list to the top</p><h3 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>List</code> <code>self</code> The List instance</li></ul>`,57)]))}const u=e(l,[["render",r]]);export{k as __pageData,u as default};
