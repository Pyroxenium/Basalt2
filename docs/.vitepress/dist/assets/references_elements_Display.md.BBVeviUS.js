import{_ as t,a,b as o,ag as i}from"./chunks/framework.BcrMLAmg.js";const u=JSON.parse('{"title":"Display","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/Display.md","filePath":"references/elements/Display.md","lastUpdated":1757844696000}'),r={name:"references/elements/Display.md"};function d(l,e,n,s,c,h){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="display" tabindex="-1">Display <a class="header-anchor" href="#display" aria-label="Permalink to &quot;Display&quot;">​</a></h1><p><em>The Display is a special element where you can use the window (term) API to draw on the display, useful when you need to use external APIs.</em></p><p>Extends: <code>VisualElement</code></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Returns</th><th>Description</th></tr></thead><tbody><tr><td><a href="#display-getwindow">Display:getWindow</a></td><td>table</td><td>Returns the current window object</td></tr><tr><td><a href="#display-write-x-y-text-fg-bg">Display:write</a></td><td>Display</td><td>Writes text to the display</td></tr></tbody></table><h2 id="display-getwindow" tabindex="-1">Display:getWindow() <a class="header-anchor" href="#display-getwindow" aria-label="Permalink to &quot;Display:getWindow()&quot;">​</a></h2><p>Returns the current window object</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>table</code> <code>window</code> The current window object</li></ul><h2 id="display-write-x-y-text-fg-bg" tabindex="-1">Display:write(x, y, text, fg?, bg?) <a class="header-anchor" href="#display-write-x-y-text-fg-bg" aria-label="Permalink to &quot;Display:write(x, y, text, fg?, bg?)&quot;">​</a></h2><p>Writes text to the display at the given position with the given foreground and background colors</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>x</code> <code>number</code> The x position to write to</li><li><code>y</code> <code>number</code> The y position to write to</li><li><code>text</code> <code>string</code> The text to write</li><li><code>fg</code> <em>(optional)</em> <code>colors</code> The foreground color (optional)</li><li><code>bg</code> <em>(optional)</em> <code>colors</code> The background color (optional)</li></ul><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ul><li><code>Display</code> <code>self</code> The display instance</li></ul>',15)]))}const y=t(r,[["render",d]]);export{u as __pageData,y as default};
