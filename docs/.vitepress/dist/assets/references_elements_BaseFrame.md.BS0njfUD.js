import{_ as t,a,b as r,ag as o}from"./chunks/framework.BcrMLAmg.js";const u=JSON.parse('{"title":"BaseFrame","description":"","frontmatter":{},"headers":[],"relativePath":"references/elements/BaseFrame.md","filePath":"references/elements/BaseFrame.md","lastUpdated":1757844696000}'),s={name:"references/elements/BaseFrame.md"};function n(i,e,d,h,l,c){return r(),a("div",null,e[0]||(e[0]=[o('<h1 id="baseframe" tabindex="-1">BaseFrame <a class="header-anchor" href="#baseframe" aria-label="Permalink to &quot;BaseFrame&quot;">​</a></h1><p><em>This is the base frame class. It is the root element of all elements and the only element without a parent.</em></p><p>Extends: <code>Container</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>term</td><td>term</td><td>peripheral</td><td>term.current()</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Returns</th><th>Description</th></tr></thead><tbody><tr><td><a href="#baseframe-setcursor-x-y-blink">BaseFrame:setCursor</a></td><td>-</td><td>Sets the cursor position</td></tr></tbody></table><h2 id="baseframe-setcursor-x-y-blink" tabindex="-1">BaseFrame:setCursor(x, y, blink) <a class="header-anchor" href="#baseframe-setcursor-x-y-blink" aria-label="Permalink to &quot;BaseFrame:setCursor(x, y, blink)&quot;">​</a></h2><p>Sets the cursor position</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>x</code> <code>number</code> The x position to set the cursor to</li><li><code>y</code> <code>number</code> The y position to set the cursor to</li><li><code>blink</code> <code>boolean</code> Whether the cursor should blink</li></ul>',11)]))}const b=t(s,[["render",n]]);export{u as __pageData,b as default};
